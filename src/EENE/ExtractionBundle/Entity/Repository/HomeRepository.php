<?php
namespace EENE\ExtractionBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\Query;
/**
 * HomeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HomeRepository extends EntityRepository
{
     //récuperer une table des json files aves leurs fichiers text 
     // et entités correspondants s'ils esistent
     public function getMyFiles($user)
    {
     //on selection que les id, les nom des fichiers Text/JSON et date création de fichier Json  et l'extractor utilisé
          $jsonfile =$this->getEntityManager()->
            createQuery('
             SELECT jsonFile, count(entities.id) as nbentities
             FROM ExtractionBundle:NerdFile jsonFile
              LEFT JOIN jsonFile.textFile textFile
              LEFT JOIN jsonFile.nerdFileEntities entities
              WHERE jsonFile.user=:user 
              Group BY jsonFile
              ')
             ->setParameter('user',$user)->getResult();
           return $jsonfile;
       //  return $jsonfiledata
    }
    
    
    
      //récuperer les entités  non geolocalisées
      //cas de geocodage des entités not geolocalisées "notGeocoded"
     public function getNotGeocodedSpatialEntities($idjsonfile)
    {
        $notGeocodedSpatialEntities =$this->getEntityManager()->
          createQuery("
             SELECT e
             FROM ExtractionBundle:Entity e
              JOIN e.nerdFile n
               JOIN e.geolocation geo 
              WHERE n.id=:idjsonfile  
              and geo.geolocatedBy='notGeocoded'")
             ->setParameter('idjsonfile',$idjsonfile)->getResult();
            
         return $notGeocodedSpatialEntities;
    }

}
